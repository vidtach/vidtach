/*!
 * ffmpegjs plugin for videojs-record
 * @version 3.9.0
 * @see https://github.com/collab-project/videojs-record
 * @copyright 2014-2020 Collab
 * @license MIT
 */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("videojs")):"function"==typeof define&&define.amd?define("ffmpegjs",["videojs"],t):"object"==typeof exports?exports.ffmpegjs=t(require("videojs")):(e.VideojsRecord=e.VideojsRecord||{},e.VideojsRecord.ffmpegjs=t(e.videojs))}(window,(function(e){return function(e){var t={};function r(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(o,n,function(t){return e[t]}.bind(null,n));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=8)}({0:function(t,r){t.exports=e},8:function(e,t,r){"use strict";r.r(t);var o=r(0),n=r.n(o);const i=n.a.getComponent("ConvertEngine");class s extends i{constructor(e,t){super(e,t),this.debug=!1,this.convertWorkerURL="ffmpeg-worker-mp4.js",this.outputType=null,this.pluginLibraryOptions={}}setup(e,t){if(this.mediaType=e,this.debug=t,this.stdout=this.stderr="",void 0===this.pluginLibraryOptions.outputType)throw new Error("no outputType specified!");this.outputType=this.pluginLibraryOptions.outputType,this.engine=new Worker(this.convertWorkerURL),this.engine.onmessage=this.onWorkerMessage.bind(this)}convert(e){this.timestamp=new Date,this.timestamp.setTime(e.lastModified),this.loadBlob(e).then(t=>{let r=["-i",e.name];r=r.concat(this.convertOptions),r.push("output_"+this.timestamp.getTime()),this.engine.postMessage({type:"run",MEMFS:[{name:e.name,data:t}],arguments:r})})}onWorkerMessage(e){let t=e.data;switch(t.type){case"ready":break;case"run":this.player().trigger("startConvert");break;case"done":let e;try{e=t.data.MEMFS[0].data}catch(e){this.player().trigger("error",this.stderr)}let r=new Blob(e,{type:this.outputType});this.addFileInfo(r,this.timestamp),this.player().convertedData=r,this.player().trigger("finishConvert");break;case"stdout":this.stdout+=t.data+"\n";break;case"stderr":this.stderr+=t.data+"\n";break;case"exit":break;case"error":this.player().trigger("error",t.data)}}}n.a.FFmpegjsEngine=s,t.default=s}})}));