{"version":3,"sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/./src/plugin/regions.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Region","params","ws","this","wavesurfer","wrapper","drawer","util","style","id","getId","start","Number","end","scrollWidth","getDuration","resize","undefined","Boolean","drag","isResizing","isDragging","loop","color","handleStyle","left","right","data","attributes","maxLength","minLength","_onRedraw","updateRender","scroll","scrollParent","scrollSpeed","scrollThreshold","preventContextMenu","channelIdx","parseInt","regionHeight","marginTop","channelCount","backend","ac","destination","Math","floor","getHeight","bindInOut","render","on","fireEvent","element","removeChild","un","play","once","playLoop","regionEl","document","createElement","attrname","className","title","formatTime","setAttribute","position","zIndex","height","top","handleLeft","appendChild","handleRight","css","cursor","width","maxWidth","backgroundColor","handleLeftCss","assign","handleRightCss","bindEvents","map","time","slice","join","pixelRatio","dur","getWidth","startLimited","endLimited","max","min","round","regionWidth","firedIn","firedOut","onProcess","addEventListener","e","preventDefault","stopPropagation","bindDragEvents","startTime","touchId","maxScroll","scrollDirection","wrapperRect","container","updated","onDown","duration","touches","length","targetTouches","identifier","regions","getRegionSnapToGridValue","handleEvent","clientWidth","getBoundingClientRect","target","tagName","toLowerCase","classList","contains","onUp","preventClick","onMove","oldTime","delta","onDrag","onResize","regionRect","x","clientX","edgeScroll","scrollLeft","requestAnimationFrame","body","removeEventListener","maxEnd","update","direction","RegionsPlugin","maxRegions","getOwnPropertyNames","Observer","forEach","_onBackendCreated","region","add","list","_onReady","dragSelection","enableDragSelection","keys","deferInit","staticProps","addRegion","options","initialisedPluginList","initPlugin","clearRegions","clear","disableDragSelection","instance","isReady","wouldExceedMaxRegions","remove","slop","pxMove","eventDown","eventUp","eventMove","startUpdate","endUpdate","getCurrentTime","cur","snapToGridInterval","offset","snapToGridOffset"],"mappings":"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","file":"wavesurfer.regions.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"regions\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"regions\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"regions\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"localhost:8080/dist/plugin/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/**\n * (Single) Region plugin class\n *\n * Must be turned into an observer before instantiating. This is done in\n * `RegionsPlugin` (main plugin class).\n *\n * @extends {Observer}\n */\nclass Region {\n    constructor(params, ws) {\n        this.wavesurfer = ws;\n        this.wrapper = ws.drawer.wrapper;\n        this.util = ws.util;\n        this.style = this.util.style;\n\n        this.id = params.id == null ? ws.util.getId() : params.id;\n        this.start = Number(params.start) || 0;\n        this.end =\n            params.end == null\n                ? // small marker-like region\n                  this.start +\n                  (4 / this.wrapper.scrollWidth) * this.wavesurfer.getDuration()\n                : Number(params.end);\n        this.resize =\n            params.resize === undefined ? true : Boolean(params.resize);\n        this.drag = params.drag === undefined ? true : Boolean(params.drag);\n        // reflect resize and drag state of region for region-updated listener\n        this.isResizing = false;\n        this.isDragging = false;\n        this.loop = Boolean(params.loop);\n        this.color = params.color || 'rgba(0, 0, 0, 0.1)';\n        // The left and right handleStyle properties can be set to 'none' for\n        // no styling or can be assigned an object containing CSS properties.\n        this.handleStyle = params.handleStyle || {\n            left: {},\n            right: {}\n        };\n        this.data = params.data || {};\n        this.attributes = params.attributes || {};\n\n        this.maxLength = params.maxLength;\n        this.minLength = params.minLength;\n        this._onRedraw = () => this.updateRender();\n\n        this.scroll = params.scroll !== false && ws.params.scrollParent;\n        this.scrollSpeed = params.scrollSpeed || 1;\n        this.scrollThreshold = params.scrollThreshold || 10;\n        // Determines whether the context menu is prevented from being opened.\n        this.preventContextMenu =\n            params.preventContextMenu === undefined\n                ? false\n                : Boolean(params.preventContextMenu);\n\n        // select channel ID to set region\n        let channelIdx =\n            params.channelIdx == null ? -1 : parseInt(params.channelIdx);\n        this.regionHeight = '100%';\n        this.marginTop = '0px';\n        let channelCount = this.wavesurfer.backend.ac.destination.channelCount;\n        if (channelIdx >= 0 && channelIdx < channelCount) {\n            this.regionHeight = Math.floor((1 / channelCount) * 100) + '%';\n            this.marginTop = this.wavesurfer.getHeight() * channelIdx + 'px';\n        }\n\n        this.bindInOut();\n        this.render();\n        this.wavesurfer.on('zoom', this._onRedraw);\n        this.wavesurfer.on('redraw', this._onRedraw);\n        this.wavesurfer.fireEvent('region-created', this);\n    }\n\n    /* Update region params. */\n    update(params) {\n        if (params.start != null) {\n            this.start = Number(params.start);\n        }\n        if (params.end != null) {\n            this.end = Number(params.end);\n        }\n        if (params.loop != null) {\n            this.loop = Boolean(params.loop);\n        }\n        if (params.color != null) {\n            this.color = params.color;\n        }\n        if (params.handleStyle != null) {\n            this.handleStyle = params.handleStyle;\n        }\n        if (params.data != null) {\n            this.data = params.data;\n        }\n        if (params.resize != null) {\n            this.resize = Boolean(params.resize);\n        }\n        if (params.drag != null) {\n            this.drag = Boolean(params.drag);\n        }\n        if (params.maxLength != null) {\n            this.maxLength = Number(params.maxLength);\n        }\n        if (params.minLength != null) {\n            this.minLength = Number(params.minLength);\n        }\n        if (params.attributes != null) {\n            this.attributes = params.attributes;\n        }\n\n        this.updateRender();\n        this.fireEvent('update');\n        this.wavesurfer.fireEvent('region-updated', this);\n    }\n\n    /* Remove a single region. */\n    remove() {\n        if (this.element) {\n            this.wrapper.removeChild(this.element);\n            this.element = null;\n            this.fireEvent('remove');\n            this.wavesurfer.un('zoom', this._onRedraw);\n            this.wavesurfer.un('redraw', this._onRedraw);\n            this.wavesurfer.fireEvent('region-removed', this);\n        }\n    }\n\n    /**\n     * Play the audio region.\n     * @param {number} start Optional offset to start playing at\n     */\n    play(start) {\n        const s = start || this.start;\n        this.wavesurfer.play(s, this.end);\n        this.fireEvent('play');\n        this.wavesurfer.fireEvent('region-play', this);\n    }\n\n    /**\n     * Play the audio region in a loop.\n     * @param {number} start Optional offset to start playing at\n     * */\n    playLoop(start) {\n        this.play(start);\n        this.once('out', () => this.playLoop());\n    }\n\n    /* Render a region as a DOM element. */\n    render() {\n        const regionEl = document.createElement('region');\n\n        regionEl.className = 'wavesurfer-region';\n        regionEl.title = this.formatTime(this.start, this.end);\n        regionEl.setAttribute('data-id', this.id);\n\n        for (const attrname in this.attributes) {\n            regionEl.setAttribute(\n                'data-region-' + attrname,\n                this.attributes[attrname]\n            );\n        }\n\n        this.style(regionEl, {\n            position: 'absolute',\n            zIndex: 2,\n            height: this.regionHeight,\n            top: this.marginTop\n        });\n\n        /* Resize handles */\n        if (this.resize) {\n            const handleLeft = regionEl.appendChild(\n                document.createElement('handle')\n            );\n            const handleRight = regionEl.appendChild(\n                document.createElement('handle')\n            );\n\n            handleLeft.className = 'wavesurfer-handle wavesurfer-handle-start';\n            handleRight.className = 'wavesurfer-handle wavesurfer-handle-end';\n\n            // Default CSS properties for both handles.\n            const css = {\n                cursor: 'col-resize',\n                position: 'absolute',\n                top: '0px',\n                width: '1%',\n                maxWidth: '4px',\n                height: '100%',\n                backgroundColor: 'rgba(0, 0, 0, 1)'\n            };\n\n            // Merge CSS properties per handle.\n            const handleLeftCss =\n                this.handleStyle.left !== 'none'\n                    ? Object.assign({ left: '0px' }, css, this.handleStyle.left)\n                    : null;\n            const handleRightCss =\n                this.handleStyle.right !== 'none'\n                    ? Object.assign(\n                          { right: '0px' },\n                          css,\n                          this.handleStyle.right\n                      )\n                    : null;\n\n            if (handleLeftCss) {\n                this.style(handleLeft, handleLeftCss);\n            }\n\n            if (handleRightCss) {\n                this.style(handleRight, handleRightCss);\n            }\n        }\n\n        this.element = this.wrapper.appendChild(regionEl);\n        this.updateRender();\n        this.bindEvents(regionEl);\n    }\n\n    formatTime(start, end) {\n        return (start == end ? [start] : [start, end])\n            .map(time =>\n                [\n                    Math.floor((time % 3600) / 60), // minutes\n                    ('00' + Math.floor(time % 60)).slice(-2) // seconds\n                ].join(':')\n            )\n            .join('-');\n    }\n\n    getWidth() {\n        return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\n    }\n\n    /* Update element's position, width, color. */\n    updateRender() {\n        // duration varies during loading process, so don't overwrite important data\n        const dur = this.wavesurfer.getDuration();\n        const width = this.getWidth();\n\n        var startLimited = this.start;\n        var endLimited = this.end;\n        if (startLimited < 0) {\n            startLimited = 0;\n            endLimited = endLimited - startLimited;\n        }\n        if (endLimited > dur) {\n            endLimited = dur;\n            startLimited = dur - (endLimited - startLimited);\n        }\n\n        if (this.minLength != null) {\n            endLimited = Math.max(startLimited + this.minLength, endLimited);\n        }\n\n        if (this.maxLength != null) {\n            endLimited = Math.min(startLimited + this.maxLength, endLimited);\n        }\n\n        if (this.element != null) {\n            // Calculate the left and width values of the region such that\n            // no gaps appear between regions.\n            const left = Math.round((startLimited / dur) * width);\n            const regionWidth = Math.round((endLimited / dur) * width) - left;\n\n            this.style(this.element, {\n                left: left + 'px',\n                width: regionWidth + 'px',\n                backgroundColor: this.color,\n                cursor: this.drag ? 'move' : 'default'\n            });\n\n            for (const attrname in this.attributes) {\n                this.element.setAttribute(\n                    'data-region-' + attrname,\n                    this.attributes[attrname]\n                );\n            }\n\n            this.element.title = this.formatTime(this.start, this.end);\n        }\n    }\n\n    /* Bind audio events. */\n    bindInOut() {\n        this.firedIn = false;\n        this.firedOut = false;\n\n        const onProcess = time => {\n            let start = Math.round(this.start * 10) / 10;\n            let end = Math.round(this.end * 10) / 10;\n            time = Math.round(time * 10) / 10;\n\n            if (\n                !this.firedOut &&\n                this.firedIn &&\n                (start > time || end <= time)\n            ) {\n                this.firedOut = true;\n                this.firedIn = false;\n                this.fireEvent('out');\n                this.wavesurfer.fireEvent('region-out', this);\n            }\n            if (!this.firedIn && start <= time && end > time) {\n                this.firedIn = true;\n                this.firedOut = false;\n                this.fireEvent('in');\n                this.wavesurfer.fireEvent('region-in', this);\n            }\n        };\n\n        this.wavesurfer.backend.on('audioprocess', onProcess);\n\n        this.on('remove', () => {\n            this.wavesurfer.backend.un('audioprocess', onProcess);\n        });\n\n        /* Loop playback. */\n        this.on('out', () => {\n            if (this.loop) {\n                this.wavesurfer.play(this.start);\n            }\n        });\n    }\n\n    /* Bind DOM events. */\n    bindEvents() {\n        const preventContextMenu = this.preventContextMenu;\n\n        this.element.addEventListener('mouseenter', e => {\n            this.fireEvent('mouseenter', e);\n            this.wavesurfer.fireEvent('region-mouseenter', this, e);\n        });\n\n        this.element.addEventListener('mouseleave', e => {\n            this.fireEvent('mouseleave', e);\n            this.wavesurfer.fireEvent('region-mouseleave', this, e);\n        });\n\n        this.element.addEventListener('click', e => {\n            e.preventDefault();\n            this.fireEvent('click', e);\n            this.wavesurfer.fireEvent('region-click', this, e);\n        });\n\n        this.element.addEventListener('dblclick', e => {\n            e.stopPropagation();\n            e.preventDefault();\n            this.fireEvent('dblclick', e);\n            this.wavesurfer.fireEvent('region-dblclick', this, e);\n        });\n\n        this.element.addEventListener('contextmenu', e => {\n            if (preventContextMenu) {\n                e.preventDefault();\n            }\n            this.fireEvent('contextmenu', e);\n            this.wavesurfer.fireEvent('region-contextmenu', this, e);\n        });\n\n        /* Drag or resize on mousemove. */\n        if (this.drag || this.resize) {\n            this.bindDragEvents();\n        }\n    }\n\n    bindDragEvents() {\n        const container = this.wavesurfer.drawer.container;\n        const scrollSpeed = this.scrollSpeed;\n        const scrollThreshold = this.scrollThreshold;\n        let startTime;\n        let touchId;\n        let drag;\n        let maxScroll;\n        let resize;\n        let updated = false;\n        let scrollDirection;\n        let wrapperRect;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = e => {\n            const duration = this.wavesurfer.getDuration();\n            if (!scrollDirection || (!drag && !resize)) {\n                return;\n            }\n\n            // Update scroll position\n            let scrollLeft =\n                this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n            this.wrapper.scrollLeft = scrollLeft = Math.min(\n                maxScroll,\n                Math.max(0, scrollLeft)\n            );\n\n            // Get the currently selected time according to the mouse position\n            const time = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(e) * duration\n            );\n            const delta = time - startTime;\n            startTime = time;\n\n            // Continue dragging or resizing\n            drag ? this.onDrag(delta) : this.onResize(delta, resize);\n\n            // Repeat\n            window.requestAnimationFrame(() => {\n                edgeScroll(e);\n            });\n        };\n\n        const onDown = e => {\n            const duration = this.wavesurfer.getDuration();\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\n\n            // stop the event propagation, if this region is resizable or draggable\n            // and the event is therefore handled here.\n            if (this.drag || this.resize) {\n                e.stopPropagation();\n            }\n\n            // Store the selected startTime we begun dragging or resizing\n            startTime = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(e, true) * duration\n            );\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n            wrapperRect = this.wrapper.getBoundingClientRect();\n\n            this.isResizing = false;\n            this.isDragging = false;\n            if (e.target.tagName.toLowerCase() === 'handle') {\n                this.isResizing = true;\n                resize = e.target.classList.contains('wavesurfer-handle-start')\n                    ? 'start'\n                    : 'end';\n            } else {\n                this.isDragging = true;\n                drag = true;\n                resize = false;\n            }\n        };\n        const onUp = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n\n            if (drag || resize) {\n                this.isDragging = false;\n                this.isResizing = false;\n                drag = false;\n                scrollDirection = null;\n                resize = false;\n            }\n\n            if (updated) {\n                updated = false;\n                this.util.preventClick();\n                this.fireEvent('update-end', e);\n                this.wavesurfer.fireEvent('region-update-end', this, e);\n            }\n        };\n        const onMove = e => {\n            const duration = this.wavesurfer.getDuration();\n\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            if (e.targetTouches && e.targetTouches[0].identifier != touchId) {\n                return;\n            }\n            if (!drag && !resize) {\n                return;\n            }\n\n            const oldTime = startTime;\n            const time = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(e) * duration\n            );\n\n            const delta = time - startTime;\n            startTime = time;\n\n            // Drag\n            if (this.drag && drag) {\n                updated = updated || !!delta;\n                this.onDrag(delta);\n            }\n\n            // Resize\n            if (this.resize && resize) {\n                updated = updated || !!delta;\n                this.onResize(delta, resize);\n            }\n\n            if (\n                this.scroll &&\n                container.clientWidth < this.wrapper.scrollWidth\n            ) {\n                if (drag) {\n                    // The threshold is not between the mouse and the container edge\n                    // but is between the region and the container edge\n                    const regionRect = this.element.getBoundingClientRect();\n                    let x = regionRect.left - wrapperRect.left;\n\n                    // Check direction\n                    if (time < oldTime && x >= 0) {\n                        scrollDirection = -1;\n                    } else if (\n                        time > oldTime &&\n                        x + regionRect.width <= wrapperRect.right\n                    ) {\n                        scrollDirection = 1;\n                    }\n\n                    // Check that we are still beyond the threshold\n                    if (\n                        (scrollDirection === -1 && x > scrollThreshold) ||\n                        (scrollDirection === 1 &&\n                            x + regionRect.width <\n                                wrapperRect.right - scrollThreshold)\n                    ) {\n                        scrollDirection = null;\n                    }\n                } else {\n                    // Mouse based threshold\n                    let x = e.clientX - wrapperRect.left;\n\n                    // Check direction\n                    if (x <= scrollThreshold) {\n                        scrollDirection = -1;\n                    } else if (x >= wrapperRect.right - scrollThreshold) {\n                        scrollDirection = 1;\n                    } else {\n                        scrollDirection = null;\n                    }\n                }\n\n                if (scrollDirection) {\n                    edgeScroll(e);\n                }\n            }\n        };\n\n        this.element.addEventListener('mousedown', onDown);\n        this.element.addEventListener('touchstart', onDown);\n\n        this.wrapper.addEventListener('mousemove', onMove);\n        this.wrapper.addEventListener('touchmove', onMove);\n\n        document.body.addEventListener('mouseup', onUp);\n        document.body.addEventListener('touchend', onUp);\n\n        this.on('remove', () => {\n            document.body.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n            this.wrapper.removeEventListener('mousemove', onMove);\n            this.wrapper.removeEventListener('touchmove', onMove);\n        });\n\n        this.wavesurfer.on('destroy', () => {\n            document.body.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n        });\n    }\n\n    onDrag(delta) {\n        const maxEnd = this.wavesurfer.getDuration();\n        if (this.end + delta > maxEnd || this.start + delta < 0) {\n            return;\n        }\n\n        this.update({\n            start: this.start + delta,\n            end: this.end + delta\n        });\n    }\n\n    onResize(delta, direction) {\n        if (direction === 'start') {\n            this.update({\n                start: Math.min(this.start + delta, this.end),\n                end: Math.max(this.start + delta, this.end)\n            });\n        } else {\n            this.update({\n                start: Math.min(this.end + delta, this.start),\n                end: Math.max(this.end + delta, this.start)\n            });\n        }\n    }\n}\n\n/**\n * @typedef {Object} RegionsPluginParams\n * @property {?boolean} dragSelection Enable creating regions by dragging with\n * the mouse\n * @property {?RegionParams[]} regions Regions that should be added upon\n * initialisation\n * @property {number} slop=2 The sensitivity of the mouse dragging\n * @property {?number} snapToGridInterval Snap the regions to a grid of the specified multiples in seconds\n * @property {?number} snapToGridOffset Shift the snap-to-grid by the specified seconds. May also be negative.\n * @property {?boolean} deferInit Set to true to manually call\n * @property {number[]} maxRegions Maximum number of regions that may be created by the user at one time.\n * `initPlugin('regions')`\n */\n\n/**\n * @typedef {Object} RegionParams\n * @desc The parameters used to describe a region.\n * @example wavesurfer.addRegion(regionParams);\n * @property {string} id=→random The id of the region\n * @property {number} start=0 The start position of the region (in seconds).\n * @property {number} end=0 The end position of the region (in seconds).\n * @property {?boolean} loop Whether to loop the region when played back.\n * @property {boolean} drag=true Allow/disallow dragging the region.\n * @property {boolean} resize=true Allow/disallow resizing the region.\n * @property {string} [color='rgba(0, 0, 0, 0.1)'] HTML color code.\n * @property {?number} channelIdx Select channel to draw the region on (if there are multiple channel waveforms).\n * @property {?object} handleStyle A set of CSS properties used to style the left and right handle.\n * @property {?boolean} preventContextMenu=false Determines whether the context menu is prevented from being opened.\n */\n\n/**\n * Regions are visual overlays on waveform that can be used to play and loop\n * portions of audio. Regions can be dragged and resized.\n *\n * Visual customization is possible via CSS (using the selectors\n * `.wavesurfer-region` and `.wavesurfer-handle`).\n *\n * @implements {PluginClass}\n * @extends {Observer}\n *\n * @example\n * // es6\n * import RegionsPlugin from 'wavesurfer.regions.js';\n *\n * // commonjs\n * var RegionsPlugin = require('wavesurfer.regions.js');\n *\n * // if you are using <script> tags\n * var RegionsPlugin = window.WaveSurfer.regions;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     RegionsPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class RegionsPlugin {\n    /**\n     * Regions plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param {RegionsPluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'regions',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                addRegion(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    return this.regions.add(options);\n                },\n\n                clearRegions() {\n                    this.regions && this.regions.clear();\n                },\n\n                enableDragSelection(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    this.regions.enableDragSelection(options);\n                },\n\n                disableDragSelection() {\n                    this.regions.disableDragSelection();\n                }\n            },\n            instance: RegionsPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = {\n            ...ws.util,\n            getRegionSnapToGridValue: value => {\n                return this.getRegionSnapToGridValue(value, params);\n            }\n        };\n        this.maxRegions = params.maxRegions;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            this.util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Region.prototype[key] = this.util.Observer.prototype[key];\n        });\n        this.wavesurfer.Region = Region;\n\n        this._onBackendCreated = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            if (this.params.regions) {\n                this.params.regions.forEach(region => {\n                    this.add(region);\n                });\n            }\n        };\n\n        // Id-based hash of regions\n        this.list = {};\n        this._onReady = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            if (this.params.dragSelection) {\n                this.enableDragSelection(this.params);\n            }\n            Object.keys(this.list).forEach(id => {\n                this.list[id].updateRender();\n            });\n        };\n    }\n\n    init() {\n        // Check if ws is ready\n        if (this.wavesurfer.isReady) {\n            this._onBackendCreated();\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n            this.wavesurfer.once('backend-created', this._onBackendCreated);\n        }\n    }\n\n    destroy() {\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\n        this.disableDragSelection();\n        this.clear();\n    }\n\n    /**\n     * check to see if adding a new region would exceed maxRegions\n     * @return {boolean} whether we should proceed and create a region\n     * @private\n     */\n    wouldExceedMaxRegions() {\n        return (\n            this.maxRegions && Object.keys(this.list).length >= this.maxRegions\n        );\n    }\n\n    /**\n     * Add a region\n     *\n     * @param {object} params Region parameters\n     * @return {Region} The created region\n     */\n    add(params) {\n        if (this.wouldExceedMaxRegions()) return null;\n\n        const region = new this.wavesurfer.Region(params, this.wavesurfer);\n\n        this.list[region.id] = region;\n\n        region.on('remove', () => {\n            delete this.list[region.id];\n        });\n\n        return region;\n    }\n\n    /**\n     * Remove all regions\n     */\n    clear() {\n        Object.keys(this.list).forEach(id => {\n            this.list[id].remove();\n        });\n    }\n\n    enableDragSelection(params) {\n        this.disableDragSelection();\n\n        const slop = params.slop || 2;\n        const container = this.wavesurfer.drawer.container;\n        const scroll =\n            params.scroll !== false && this.wavesurfer.params.scrollParent;\n        const scrollSpeed = params.scrollSpeed || 1;\n        const scrollThreshold = params.scrollThreshold || 10;\n        let drag;\n        let duration = this.wavesurfer.getDuration();\n        let maxScroll;\n        let start;\n        let region;\n        let touchId;\n        let pxMove = 0;\n        let scrollDirection;\n        let wrapperRect;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = e => {\n            if (!region || !scrollDirection) {\n                return;\n            }\n\n            // Update scroll position\n            let scrollLeft =\n                this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n            this.wrapper.scrollLeft = scrollLeft = Math.min(\n                maxScroll,\n                Math.max(0, scrollLeft)\n            );\n\n            // Update range\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            region.update({\n                start: Math.min(end * duration, start * duration),\n                end: Math.max(end * duration, start * duration)\n            });\n\n            // Check that there is more to scroll and repeat\n            if (scrollLeft < maxScroll && scrollLeft > 0) {\n                window.requestAnimationFrame(() => {\n                    edgeScroll(e);\n                });\n            }\n        };\n\n        const eventDown = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            duration = this.wavesurfer.getDuration();\n            touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n            wrapperRect = this.wrapper.getBoundingClientRect();\n\n            drag = true;\n            start = this.wavesurfer.drawer.handleEvent(e, true);\n            region = null;\n            scrollDirection = null;\n        };\n        this.wrapper.addEventListener('mousedown', eventDown);\n        this.wrapper.addEventListener('touchstart', eventDown);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchstart', eventDown);\n            this.wrapper.removeEventListener('mousedown', eventDown);\n        });\n\n        const eventUp = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n\n            drag = false;\n            pxMove = 0;\n            scrollDirection = null;\n\n            if (region) {\n                this.util.preventClick();\n                region.fireEvent('update-end', e);\n                this.wavesurfer.fireEvent('region-update-end', region, e);\n            }\n\n            region = null;\n        };\n        this.wrapper.addEventListener('mouseup', eventUp);\n        this.wrapper.addEventListener('touchend', eventUp);\n\n        document.body.addEventListener('mouseup', eventUp);\n        document.body.addEventListener('touchend', eventUp);\n        this.on('disable-drag-selection', () => {\n            document.body.removeEventListener('mouseup', eventUp);\n            document.body.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('mouseup', eventUp);\n        });\n\n        const eventMove = e => {\n            if (!drag) {\n                return;\n            }\n            if (++pxMove <= slop) {\n                return;\n            }\n\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            if (e.targetTouches && e.targetTouches[0].identifier != touchId) {\n                return;\n            }\n\n            // auto-create a region during mouse drag, unless region-count would exceed \"maxRegions\"\n            if (!region) {\n                region = this.add(params || {});\n                if (!region) return;\n            }\n\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            const startUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                start * duration\n            );\n            const endUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                end * duration\n            );\n            region.update({\n                start: Math.min(endUpdate, startUpdate),\n                end: Math.max(endUpdate, startUpdate)\n            });\n\n            // If scrolling is enabled\n            if (scroll && container.clientWidth < this.wrapper.scrollWidth) {\n                // Check threshold based on mouse\n                const x = e.clientX - wrapperRect.left;\n                if (x <= scrollThreshold) {\n                    scrollDirection = -1;\n                } else if (x >= wrapperRect.right - scrollThreshold) {\n                    scrollDirection = 1;\n                } else {\n                    scrollDirection = null;\n                }\n                scrollDirection && edgeScroll(e);\n            }\n        };\n        this.wrapper.addEventListener('mousemove', eventMove);\n        this.wrapper.addEventListener('touchmove', eventMove);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchmove', eventMove);\n            this.wrapper.removeEventListener('mousemove', eventMove);\n        });\n    }\n\n    disableDragSelection() {\n        this.fireEvent('disable-drag-selection');\n    }\n\n    /**\n     * Get current region\n     *\n     * The smallest region that contains the current time. If several such\n     * regions exist, take the first. Return `null` if none exist.\n     *\n     * @returns {Region} The current region\n     */\n    getCurrentRegion() {\n        const time = this.wavesurfer.getCurrentTime();\n        let min = null;\n        Object.keys(this.list).forEach(id => {\n            const cur = this.list[id];\n            if (cur.start <= time && cur.end >= time) {\n                if (!min || cur.end - cur.start < min.end - min.start) {\n                    min = cur;\n                }\n            }\n        });\n\n        return min;\n    }\n\n    /**\n     * Match the value to the grid, if required\n     *\n     * If the regions plugin params have a snapToGridInterval set, return the\n     * value matching the nearest grid interval. If no snapToGridInterval is set,\n     * the passed value will be returned without modification.\n     *\n     * @param {number} value the value to snap to the grid, if needed\n     * @param {Object} params the regions plugin params\n     * @returns {number} value\n     */\n    getRegionSnapToGridValue(value, params) {\n        if (params.snapToGridInterval) {\n            // the regions should snap to a grid\n            const offset = params.snapToGridOffset || 0;\n            return (\n                Math.round((value - offset) / params.snapToGridInterval) *\n                    params.snapToGridInterval +\n                offset\n            );\n        }\n\n        // no snap-to-grid\n        return value;\n    }\n}\n"],"sourceRoot":""}